version: 2
variables:

  install_build_essential: &install_build_essential
    run:
      name: Install Build essential
      command: |
        apt-get update
        apt-get install -y build-essential

  prepare_conda: &prepare_conda
    run:
      name: Config and Update Conda
      command: |
        conda config --set always_yes yes --set changeps1 no
        conda update -q conda
        conda install cookiecutter -c conda-forge 

  run_test_conda_build: &run_test_conda_build
    run:
      name: Run tests
      command: |
        conda install conda-build make
        cd ..
        cookiecutter py_cookiecutter --overwrite-if-exists --no-input
        cd py_tools
        conda build recipe -c conda-forge

  update_conda: &update_conda
    run:
      name: update conda
      command: |
        conda update -q conda 
        conda init bash

  run_test_script: &run_test_script
    run:
      name: Run test scripts
      command: |
        conda init bash
        chmod +x .ci/test_project.sh 
        ./.ci/test_project.sh py_cookiecutter


jobs:
  test_job:
    docker:
     - image: continuumio/miniconda3:4.5.12
    working_directory: ~/py_cookiecutter
    steps:
      - checkout
      - *install_build_essential
      - *update_conda
      - *run_test_script

  test_conda_build_job:
    docker:
     - image: continuumio/miniconda3:4.5.12
    working_directory: ~/py_cookiecutter
    steps:
      - checkout
      - *install_build_essential
      - *prepare_conda
      - *run_test_conda_build
  
  push_to_py_tools_job:
    docker:
     - image: continuumio/miniconda3:4.5.12
    working_directory: ~/py_cookiecutter
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "28:9e:9c:ff:e4:4b:94:6d:4b:e6:1c:1d:46:e5:bc:64"
      - *prepare_conda
      - run:
          name: clone py_tools
          command: |
            cd ..
            rm -rf py_tools
            echo "CIRCLE_BRANCH $CIRCLE_BRANCH"
            echo "CIRCLE_USERNAME  $CIRCLE_USERNAME"
            if [[ "$CIRCLE_BRANCH $CIRCLE_USERNAME" == "master DerThorsten" ]]; then
                echo "IN master"
                git clone https://github.com/DerThorsten/py_tools
            else
              echo "NOT IN master"
              git clone https://github.com/DerThorsten/py_tools -b tests
            fi
            OLD_VERSION=$(perl -pe '($_)=/([0-9]+([.][0-9]+)+)/' py_tools/version.py)
            conda install --yes cookiecutter -c conda-forge 
            cookiecutter py_cookiecutter version $OLD_VERSION --overwrite-if-exists --no-input 
             --config-file ~/py_cookiecutter/.ci/cookiecutter_config.yaml
            cd py_tools
            python ~/py_cookiecutter/.ci/insert_encrypted.py
            git config user.email "derthorsten@gmail.com"
            git config user.name "DerThorsten"
            git add .
            git commit -am "continous integration auto updated" --allow-empty
            if [[ "$CIRCLE_BRANCH $CIRCLE_USERNAME" == "master DerThorsten" ]]; then
                  git push --force origin master
                  bumpversion patch
                  git push --tags
            else
              git push --force origin tests
            fi
            


            


workflows:
  version: 2

  my_test:
    jobs:
      - test_job
      - test_conda_build_job
      - push_to_py_tools_job

  nightly-test:
    triggers:
       - schedule:
            cron: "0 0 * * *"
            filters:
              branches:
                only:
                  - master
    jobs:
       - test_job
       - test_conda_build_job
       - push_to_py_tools_job

